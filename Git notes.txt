Creating a Local Repository:
Different type of access to the repository are: System - All users + all repository
												Global - all repository present in the computer for current user		
												local  - only for the current repository
												
Adding a user:
	
	cmd :
		git config --global user.name "Name_of_the_user" 
		git config --local user.name "Name_of_the_user"
		git config --system	user.name "Name_of_the_user"
		
Adding a email:

	cmd:
		git config --global user.email "email-id" 
		git config --local user.email "email-id"
		git config --system	user.email "email-id"
		
To check name and email
	
	cmd:
		git config user.name
		git config user.email
		
List the configuration of repo:
	cmd:
		git config --list
		
Adding edited or new file to repository:
	cmd:
		git add "Name_of_file"
		git add *.java 		-> all file with java extension will be added
		git add .			-> all files are added

undo staging	
	cmd:
		git restore --staged 
		git restore --staged "File name" 	-> file removed from staging area
		git restore "File name" 			-> discard changes
		
Tracking of changes: 
		-> Green text - files that are added and need to be committed
		-> Red text - files that are modified and newly created (untracked files)
	cmd:
		git status 
		git status *.txt	-> status of files with specific extension will be shown
		git status -s		-> summary
			
commit:
	cmd:
		git commit -m "message"		-> repository get committed with the staged files 
									-> m indicates type of FLAG (m - message flage)
		git commit -a -m "message"	-> git stages and commits at the time
		
		git log 					-> commit history
		
	
	cmd:
		git commit			-> open the default text editor with status message/commit message/commit
		git commit file 	-> Same as above
		
		git commit "message"-> error
		
remove file:
	cmd:
		git rm --cached "name of the file" 		-> this does not remove the file from dir but from the staging area
		git rm -r --cached "dir" 				-> all the files  in the dir will be removed
		
ignore files:
	cmd: 
		touch .gitignore				-> file with this extension is created
		nano .gitignore					-> add the file need to be ignored with extension or only extenssion to ignore all such extension files
		
change the message of commit
	cmd:
		git commit --amend				-> displays the last commit message in a text editor
	
Connecting a local repository to the service provider

1. Create a new repository in the service provider website(GitHub) - with any name
2. Copy the link to the repository 
3. Go to git bash in out local repository and type the command 
			cmd:
			
			git remote add origin master Link_of_the_repository
				
				origin is a short name given for the link of the repository
				
4. to check the activities or any repo created for the local repo in service provider
			git remote -v
			
5. Push our changes to the web repository
			cmd:
				git push origin master			-> push for the first time to the specific master branch
				git push 		 				-> push directly without entering the branch name if only one branch name is present
				
